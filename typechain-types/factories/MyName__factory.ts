/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MyName, MyNameInterface } from "../MyName";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "GetName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "SetName",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000874380380620008748339818101604052810190620000379190620002a4565b80600090805190602001906200004f92919062000057565b50506200035a565b828054620000659062000324565b90600052602060002090601f016020900481019282620000895760008555620000d5565b82601f10620000a457805160ff1916838001178555620000d5565b82800160010185558215620000d5579182015b82811115620000d4578251825591602001919060010190620000b7565b5b509050620000e49190620000e8565b5090565b5b8082111562000103576000816000905550600101620000e9565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620001708262000125565b810181811067ffffffffffffffff8211171562000192576200019162000136565b5b80604052505050565b6000620001a762000107565b9050620001b5828262000165565b919050565b600067ffffffffffffffff821115620001d857620001d762000136565b5b620001e38262000125565b9050602081019050919050565b60005b8381101562000210578082015181840152602081019050620001f3565b8381111562000220576000848401525b50505050565b60006200023d6200023784620001ba565b6200019b565b9050828152602081018484840111156200025c576200025b62000120565b5b62000269848285620001f0565b509392505050565b600082601f8301126200028957620002886200011b565b5b81516200029b84826020860162000226565b91505092915050565b600060208284031215620002bd57620002bc62000111565b5b600082015167ffffffffffffffff811115620002de57620002dd62000116565b5b620002ec8482850162000271565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200033d57607f821691505b60208210811415620003545762000353620002f5565b5b50919050565b61050a806200036a6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806306fdde03146100465780634df9dcd314610064578063fe704a9d14610080575b600080fd5b61004e61009e565b60405161005b91906102bf565b60405180910390f35b61007e6004803603810190610079919061042a565b61012c565b005b610088610146565b60405161009591906102bf565b60405180910390f35b600080546100ab906104a2565b80601f01602080910402602001604051908101604052809291908181526020018280546100d7906104a2565b80156101245780601f106100f957610100808354040283529160200191610124565b820191906000526020600020905b81548152906001019060200180831161010757829003601f168201915b505050505081565b8060009080519060200190610142929190610183565b5050565b60606040518060400160405280600b81526020017f66616c61206a756e696f72000000000000000000000000000000000000000000815250905090565b82805461018f906104a2565b90600052602060002090601f0160209004810192826101b157600085556101f8565b82601f106101ca57805160ff19168380011785556101f8565b828001600101855582156101f8579182015b828111156101f75782518255916020019190600101906101dc565b5b5090506102059190610209565b5090565b5b8082111561022257600081600090555060010161020a565b5090565b600081519050919050565b600082825260208201905092915050565b60005b83811015610260578082015181840152602081019050610245565b8381111561026f576000848401525b50505050565b6000601f19601f8301169050919050565b600061029182610226565b61029b8185610231565b93506102ab818560208601610242565b6102b481610275565b840191505092915050565b600060208201905081810360008301526102d98184610286565b905092915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61033782610275565b810181811067ffffffffffffffff82111715610356576103556102ff565b5b80604052505050565b60006103696102e1565b9050610375828261032e565b919050565b600067ffffffffffffffff821115610395576103946102ff565b5b61039e82610275565b9050602081019050919050565b82818337600083830152505050565b60006103cd6103c88461037a565b61035f565b9050828152602081018484840111156103e9576103e86102fa565b5b6103f48482856103ab565b509392505050565b600082601f830112610411576104106102f5565b5b81356104218482602086016103ba565b91505092915050565b6000602082840312156104405761043f6102eb565b5b600082013567ffffffffffffffff81111561045e5761045d6102f0565b5b61046a848285016103fc565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806104ba57607f821691505b602082108114156104ce576104cd610473565b5b5091905056fea2646970667358221220d788e044d258a9fa5fa6a448e719b2b91819fbdf91cf31babe5d3083a8925ade64736f6c63430008090033";

type MyNameConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MyNameConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MyName__factory extends ContractFactory {
  constructor(...args: MyNameConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _name: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MyName> {
    return super.deploy(_name, overrides || {}) as Promise<MyName>;
  }
  getDeployTransaction(
    _name: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_name, overrides || {});
  }
  attach(address: string): MyName {
    return super.attach(address) as MyName;
  }
  connect(signer: Signer): MyName__factory {
    return super.connect(signer) as MyName__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyNameInterface {
    return new utils.Interface(_abi) as MyNameInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MyName {
    return new Contract(address, _abi, signerOrProvider) as MyName;
  }
}
