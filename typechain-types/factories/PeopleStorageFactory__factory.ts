/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  PeopleStorageFactory,
  PeopleStorageFactoryInterface,
} from "../PeopleStorageFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_storeIndex",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_age",
        type: "uint256",
      },
    ],
    name: "addPerson",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "createPeopleStorage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "getPeopleStorage",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPeopleStorageCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_storageIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_personIndex",
        type: "uint256",
      },
    ],
    name: "getPerson",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610e96806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806333abe3471461005c5780633df9b3661461007a57806367b14b47146100965780636f1d2a93146100c657806378bf3602146100f7575b600080fd5b610064610101565b604051610071919061037e565b60405180910390f35b610094600480360381019061008f919061051f565b61010d565b005b6100b060048036038101906100ab919061058e565b61018d565b6040516100bd91906105fc565b60405180910390f35b6100e060048036038101906100db9190610617565b6101d4565b6040516100ee9291906106df565b60405180910390f35b6100ff61027e565b005b60008080549050905090565b600061011884610311565b90508073ffffffffffffffffffffffffffffffffffffffff16636f760f4184846040518363ffffffff1660e01b81526004016101559291906106df565b600060405180830381600087803b15801561016f57600080fd5b505af1158015610183573d6000803e3d6000fd5b5050505050505050565b60008082815481106101a2576101a161070f565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60606000806101e285610311565b90508073ffffffffffffffffffffffffffffffffffffffff1663246982c4856040518263ffffffff1660e01b815260040161021d919061037e565b60006040518083038186803b15801561023557600080fd5b505afa158015610249573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061027291906107c3565b92509250509250929050565b600060405161028c90610358565b604051809103906000f0801580156102a8573d6000803e3d6000fd5b5090506000819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008082815481106103265761032561070f565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6106418061082083390190565b6000819050919050565b61037881610365565b82525050565b6000602082019050610393600083018461036f565b92915050565b6000604051905090565b600080fd5b600080fd5b6103b681610365565b81146103c157600080fd5b50565b6000813590506103d3816103ad565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61042c826103e3565b810181811067ffffffffffffffff8211171561044b5761044a6103f4565b5b80604052505050565b600061045e610399565b905061046a8282610423565b919050565b600067ffffffffffffffff82111561048a576104896103f4565b5b610493826103e3565b9050602081019050919050565b82818337600083830152505050565b60006104c26104bd8461046f565b610454565b9050828152602081018484840111156104de576104dd6103de565b5b6104e98482856104a0565b509392505050565b600082601f830112610506576105056103d9565b5b81356105168482602086016104af565b91505092915050565b600080600060608486031215610538576105376103a3565b5b6000610546868287016103c4565b935050602084013567ffffffffffffffff811115610567576105666103a8565b5b610573868287016104f1565b9250506040610584868287016103c4565b9150509250925092565b6000602082840312156105a4576105a36103a3565b5b60006105b2848285016103c4565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105e6826105bb565b9050919050565b6105f6816105db565b82525050565b600060208201905061061160008301846105ed565b92915050565b6000806040838503121561062e5761062d6103a3565b5b600061063c858286016103c4565b925050602061064d858286016103c4565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610691578082015181840152602081019050610676565b838111156106a0576000848401525b50505050565b60006106b182610657565b6106bb8185610662565b93506106cb818560208601610673565b6106d4816103e3565b840191505092915050565b600060408201905081810360008301526106f981856106a6565b9050610708602083018461036f565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061075161074c8461046f565b610454565b90508281526020810184848401111561076d5761076c6103de565b5b610778848285610673565b509392505050565b600082601f830112610795576107946103d9565b5b81516107a584826020860161073e565b91505092915050565b6000815190506107bd816103ad565b92915050565b600080604083850312156107da576107d96103a3565b5b600083015167ffffffffffffffff8111156107f8576107f76103a8565b5b61080485828601610780565b9250506020610815858286016107ae565b915050925092905056fe608060405234801561001057600080fd5b50610621806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063246982c41461003b5780636f760f411461006c575b600080fd5b610055600480360381019061005091906102c5565b610088565b60405161006392919061039a565b60405180910390f35b610086600480360381019061008191906104ff565b61016b565b005b6060600080838154811061009f5761009e61055b565b5b9060005260206000209060020201600001600084815481106100c4576100c361055b565b5b9060005260206000209060020201600101548180546100e2906105b9565b80601f016020809104026020016040519081016040528092919081815260200182805461010e906105b9565b801561015b5780601f106101305761010080835404028352916020019161015b565b820191906000526020600020905b81548152906001019060200180831161013e57829003601f168201915b5050505050915091509150915091565b6000604051806040016040528084815260200183815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000190805190602001906101c79291906101d8565b506020820151816001015550505050565b8280546101e4906105b9565b90600052602060002090601f016020900481019282610206576000855561024d565b82601f1061021f57805160ff191683800117855561024d565b8280016001018555821561024d579182015b8281111561024c578251825591602001919060010190610231565b5b50905061025a919061025e565b5090565b5b8082111561027757600081600090555060010161025f565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6102a28161028f565b81146102ad57600080fd5b50565b6000813590506102bf81610299565b92915050565b6000602082840312156102db576102da610285565b5b60006102e9848285016102b0565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561032c578082015181840152602081019050610311565b8381111561033b576000848401525b50505050565b6000601f19601f8301169050919050565b600061035d826102f2565b61036781856102fd565b935061037781856020860161030e565b61038081610341565b840191505092915050565b6103948161028f565b82525050565b600060408201905081810360008301526103b48185610352565b90506103c3602083018461038b565b9392505050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61040c82610341565b810181811067ffffffffffffffff8211171561042b5761042a6103d4565b5b80604052505050565b600061043e61027b565b905061044a8282610403565b919050565b600067ffffffffffffffff82111561046a576104696103d4565b5b61047382610341565b9050602081019050919050565b82818337600083830152505050565b60006104a261049d8461044f565b610434565b9050828152602081018484840111156104be576104bd6103cf565b5b6104c9848285610480565b509392505050565b600082601f8301126104e6576104e56103ca565b5b81356104f684826020860161048f565b91505092915050565b6000806040838503121561051657610515610285565b5b600083013567ffffffffffffffff8111156105345761053361028a565b5b610540858286016104d1565b9250506020610551858286016102b0565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806105d157607f821691505b602082108114156105e5576105e461058a565b5b5091905056fea2646970667358221220a4dc8747f804c7c929fc79402e078dc456892b3f2ac23f51bfb8dbf32de8caf064736f6c63430008090033a264697066735822122069ed4d4df76f82f2f4a83afbe81f9af6d272beb06284038a736d5bef176b7e2564736f6c63430008090033";

type PeopleStorageFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PeopleStorageFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PeopleStorageFactory__factory extends ContractFactory {
  constructor(...args: PeopleStorageFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PeopleStorageFactory> {
    return super.deploy(overrides || {}) as Promise<PeopleStorageFactory>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PeopleStorageFactory {
    return super.attach(address) as PeopleStorageFactory;
  }
  connect(signer: Signer): PeopleStorageFactory__factory {
    return super.connect(signer) as PeopleStorageFactory__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PeopleStorageFactoryInterface {
    return new utils.Interface(_abi) as PeopleStorageFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PeopleStorageFactory {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as PeopleStorageFactory;
  }
}
