/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PeopleStorage, PeopleStorageInterface } from "../PeopleStorage";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_age",
        type: "uint256",
      },
    ],
    name: "addPerson",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "getPerson",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610621806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063246982c41461003b5780636f760f411461006c575b600080fd5b610055600480360381019061005091906102c5565b610088565b60405161006392919061039a565b60405180910390f35b610086600480360381019061008191906104ff565b61016b565b005b6060600080838154811061009f5761009e61055b565b5b9060005260206000209060020201600001600084815481106100c4576100c361055b565b5b9060005260206000209060020201600101548180546100e2906105b9565b80601f016020809104026020016040519081016040528092919081815260200182805461010e906105b9565b801561015b5780601f106101305761010080835404028352916020019161015b565b820191906000526020600020905b81548152906001019060200180831161013e57829003601f168201915b5050505050915091509150915091565b6000604051806040016040528084815260200183815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000190805190602001906101c79291906101d8565b506020820151816001015550505050565b8280546101e4906105b9565b90600052602060002090601f016020900481019282610206576000855561024d565b82601f1061021f57805160ff191683800117855561024d565b8280016001018555821561024d579182015b8281111561024c578251825591602001919060010190610231565b5b50905061025a919061025e565b5090565b5b8082111561027757600081600090555060010161025f565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6102a28161028f565b81146102ad57600080fd5b50565b6000813590506102bf81610299565b92915050565b6000602082840312156102db576102da610285565b5b60006102e9848285016102b0565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561032c578082015181840152602081019050610311565b8381111561033b576000848401525b50505050565b6000601f19601f8301169050919050565b600061035d826102f2565b61036781856102fd565b935061037781856020860161030e565b61038081610341565b840191505092915050565b6103948161028f565b82525050565b600060408201905081810360008301526103b48185610352565b90506103c3602083018461038b565b9392505050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61040c82610341565b810181811067ffffffffffffffff8211171561042b5761042a6103d4565b5b80604052505050565b600061043e61027b565b905061044a8282610403565b919050565b600067ffffffffffffffff82111561046a576104696103d4565b5b61047382610341565b9050602081019050919050565b82818337600083830152505050565b60006104a261049d8461044f565b610434565b9050828152602081018484840111156104be576104bd6103cf565b5b6104c9848285610480565b509392505050565b600082601f8301126104e6576104e56103ca565b5b81356104f684826020860161048f565b91505092915050565b6000806040838503121561051657610515610285565b5b600083013567ffffffffffffffff8111156105345761053361028a565b5b610540858286016104d1565b9250506020610551858286016102b0565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806105d157607f821691505b602082108114156105e5576105e461058a565b5b5091905056fea2646970667358221220a4dc8747f804c7c929fc79402e078dc456892b3f2ac23f51bfb8dbf32de8caf064736f6c63430008090033";

type PeopleStorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PeopleStorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PeopleStorage__factory extends ContractFactory {
  constructor(...args: PeopleStorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PeopleStorage> {
    return super.deploy(overrides || {}) as Promise<PeopleStorage>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PeopleStorage {
    return super.attach(address) as PeopleStorage;
  }
  connect(signer: Signer): PeopleStorage__factory {
    return super.connect(signer) as PeopleStorage__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PeopleStorageInterface {
    return new utils.Interface(_abi) as PeopleStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PeopleStorage {
    return new Contract(address, _abi, signerOrProvider) as PeopleStorage;
  }
}
